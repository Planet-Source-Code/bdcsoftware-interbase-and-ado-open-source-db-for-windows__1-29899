<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Interbase%20ADO%20Tutorial_files/filelist.xml">
<title>Interbase ADO Tutorial</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>admin</o:Author>
  <o:LastAuthor>admin</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2001-12-18T00:07:00Z</o:Created>
  <o:LastSaved>2001-12-18T00:07:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>958</o:Words>
  <o:Characters>5461</o:Characters>
  <o:Company>consol</o:Company>
  <o:Lines>45</o:Lines>
  <o:Paragraphs>10</o:Paragraphs>
  <o:CharactersWithSpaces>6706</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1028405977;
	mso-list-type:hybrid;
	mso-list-template-ids:-925627232 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<h1><span style='font-size:12.0pt;mso-bidi-font-size:16.0pt'>Interbase ADO
Tutorial<o:p></o:p></span></h1>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Has anybody ever wondered if
there is an Open Source alternative to SQL Server or Access databases? Well, I
have, and I found Interbase. Interbase is a Client/Server database from
Borland. It is Open Source. It runs on Windows, Linux and bunch of other *nix
platforms. It has a very small memory footprint and it is relatively fast. It
will also support large database files (larger the 2 gig. I know a guy that has
a 300 Gig database up and running)<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Anyhow, in this article I
will describe the issues and the necessary tools to get you up and running with
Interbase. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>First let me tell you about
the benefits of Interbase:<o:p></o:p></span></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Open Source<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Fast<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Small size<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Very easy distribution (scripts for Wise or
     InstallShield are available)<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Works ADO<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Works with ODBC<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Awesome transaction management (readers never
     block writers and vice versa)<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Multiple platform support (Linux/Unix)<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Superb support for BOLB fields (Images and memo
     fields)<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-list:l0 level1 lfo1;tab-stops:list .5in'><span
     style='font-family:Arial'>Support for Arrays (you can store Arrays in
     individual fields)<o:p></o:p></span></li>
</ol>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>For starters you need to get
the server and client software. You can get the original Open Source version
(Source and Binaries) from Borland at: <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><a
href="http://www.borland.com/devsupport/interbase/opensource/">http://www.borland.com/devsupport/interbase/opensource/</a><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>or get it a modified version
(Firebird) from:<br>
<br>
<a href="http://www.ibphoenix.com/ibp_download.html">http://www.ibphoenix.com/ibp_download.html</a><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Download and install the
server and client binaries. The Interbase server ships with a ODBC driver, but
I hate ODBC and use ADO/OleDB on a day to day basis. So I had to find an OleDB
driver for Interbase. Luckily there are numerous available. You can find a
links to download sites on this site:<br>
<br>
<a href="http://www.interbase2000.org/tools_conn.htm">http://www.interbase2000.org/tools_conn.htm</a>
<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>I opted for the IBProvider
from <a href="http://www.lcpi.lipetsk.ru/prog/eng/index.html">http://www.lcpi.lipetsk.ru/prog/eng/index.html</a>
because they had some VB samples of how to use the provider with ADO. The
version that you can download is an Evaluation for 30 days. If you want a
completely free OleDB provider then use: <a
href="http://www.oledb.net/?Page=FAQ">http://www.oledb.net/?Page=FAQ</a>.
However, all my sample code is tested with IBProvider only.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Once you have downloaded and
installed all the files, you are ready for development. IB (Interbase) ships
with a sample database called employee.gdb. We will use this database as an
example. (You can find it in ‘C:\Program Files\Borland\InterBase\examples\Database’
, provided you installed the server in the default location). Anyhow, lets
start with the basics:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2><span style='font-size:12.0pt;mso-bidi-font-size:14.0pt'>Connecting to
Interbase<o:p></o:p></span></h2>

<p class=MsoNormal><span style='font-family:Arial'>Lets establish a connection
to the database. A sample connection:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'><span style="mso-spacerun: yes">    </span>Dim adoConn As
New ADODB.Connection<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'><span style="mso-spacerun: yes">   
</span>adoConn.ConnectionString = &quot;provider=LCPI.IBProvider;data
source=localhost:C:\Interbase<span style="mso-spacerun: yes">   
</span>DBs\Employee.gdb;ctype=win1251;user id=SYSDBA;password=masterkey&quot;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:Arial'><span style="mso-spacerun: yes">    </span>adoConn.Open</span><span
style='font-family:Arial'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Ok, here are a few things to
consider:<br>
Default user name and password (like SA in SQLServer) are SYSDBA and masterkey
(case sensitive). The ‘data source’ parameter has a following syntax: <i>IP
Address:file location on the remote system</i> . If you installed the server on
your development machine then use localhost or your IP. If you installed it on
a remote machine then use the IP Address of the machine. The <i>file location</i>
is a bit weird. It is local to the server and you can’t use UNC paths.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Once the connection is open,
we can start working with the database.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2><span style='font-size:12.0pt;mso-bidi-font-size:14.0pt'>Working with an
Interbase database<o:p></o:p></span></h2>

<p class=MsoNormal><span style='font-family:Arial'>For the most part, working
with Interbase is as easy as working with SQL Server or Access. However there
are a few things to consider: <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>For one, Interbase uses <i>dialects,
</i>basically it’s the SQL syntax that you issue your commands to the database.
IB 6.0 can use Dialect 1 (legacy) and Dialect 3. The sample databases are in
written in Dialect 1. If you decide to use Dialect 3 (as I have), you will
notice some weird behavior. If your database has lower case table and field
names, you will have to surround them with double quotes. For instance: <i>Select
“CompanyName”, “Address” from “tblCustomers”. </i>Needless to say this will
create havoc with VB programmers </span><span style='font-family:Wingdings;
mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:
Arial;mso-char-type:symbol;mso-symbol-font-family:Wingdings'><span
style='mso-char-type:symbol;mso-symbol-font-family:Wingdings'>J</span></span><span
style='font-family:Arial'>. One workaround is to use caps for table and field
names. (Btw, don’t ask me why this is the way it is.) For Instance: SELECT
COMPAN_YNAME, ADDRESS FROM TBLCUSTOMERS.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>The other issue that I have
found is: you cannot use <i>adCmdStoredProc </i>as your command type.
Workaround for this: use <i>adCmdText</i>. But more on this later.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Ok, so how would we get some
data in and out of our database? Well, you can use your normal recordset object
to execute a SQL statement or you can use stored procedures.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Here is a sample of a simple
select statement:<o:p></o:p></span></p>

<p class=MsoNormal><i><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span>Dim rst
As New Recordset<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes"> </span><o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>rst.Source = &quot;SELECT CUSTOMER.CONTACT_FIRST, &quot; &amp; _<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">               
</span>&quot;CUSTOMER.CONTACT_LAST, CUSTOMER.COUNTRY &quot; &amp; _<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">               
</span>&quot;FROM CUSTOMER&quot;<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">               
</span><o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>rst.ActiveConnection = adoConn<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>adoConn.BeginTrans<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span>rst.Open<o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>adoConn.CommitTrans</span></i><i><span style='font-family:Arial'><o:p></o:p></span></i></p>

<p class=MsoNormal><i><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></i></p>

<p class=MsoNormal><span style='font-family:Arial'>And here is a simple stored
procedure execution:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span>Dim rst
As New Recordset<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span>Dim cmd
As New ADODB.Command<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>adoConn.Open<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span>With cmd<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>.ActiveConnection = adoConn<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>.CommandText = &quot;Select * FROM DEPT_BUDGET (100)&quot;<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span>End With<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>adoConn.BeginTrans<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">    </span><span
style="mso-spacerun: yes">    </span>Set rst = cmd.Execute<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">   
</span>adoConn.CommitTrans<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Notice that if your stored
procedure returns any rows, you have to use the ‘SELECT * FROM <i>stored
procedure name</i>’ syntax. If your procedure does not return any records, you
can use ‘EXECUTE <i>stored procedure name</i>’.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Also, the way you pass
parameters in and out of the procedure is a bit peculiar. Lets say you have an
insert stored procedure that will accept 3 parameters. To pass those parameters
you can use inline syntax: For instance, ‘execute procedure PROC_INSERT_TBLCUSTOMERS
(<i>comma delimited parameter values)</i>’<i> </i>or you can use this syntax:<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>With cmd<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>.ActiveConnection = adoConn<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>.CommandText = &quot; execute procedure PROC_INSERT_TBLCUSTOMERS
(?,?,?)”<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>End With<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>adoConn.BeginTrans<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>cmd(0) = <i>parameter value</i><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>cmd(1) = <i>parameter value<o:p></o:p></i></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>cmd(2) = <i>parameter value</i><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>cmd.Execute<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New"'>adoConn.CommitTrans</span><span style='font-family:
Arial'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Anyhow, these are the
basics. If you guys are interested in Interbase, I will write a 2<sup>nd</sup>
part of the tutorial that will cover some advanced features like working with
Images, Arrays, UDF functions and tools for Interbase. For now take a look at
the sample code for this tutorial, and take a look at the sample databases that
are provided by Borland. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'>Raf<o:p></o:p></span></p>

</div>

</body>

</html>
